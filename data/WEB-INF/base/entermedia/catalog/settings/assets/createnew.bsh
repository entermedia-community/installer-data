import org.openedit.entermedia.modules.*;
import org.openedit.entermedia.edit.*;
import com.openedit.page.*;
import org.openedit.entermedia.*;


module = context.getPageValue("AssetEditModule");

editor = module.getAssetEditor(context);

categoryeditmodule = context.getPageValue("CategoryEditModule");
categoryeditor = categoryeditmodule.getCategoryEditor(context);

pageManager = module.pageManager;

String existingassetid = context.getRequestParameter("existingassetid");
Asset asset = null;
if (existingassetid != null && existingassetid.length() > 0)
{
	asset = editor.getAsset(existingassetid);
}

if (asset == null)
{
	asset = editor.createAssetWithDefaults();
	if (existingassetid != null && existingassetid.length() > 0)
	{
		asset.setId(existingassetid);
	}
}

if (categoryeditor.currentCategory != null) 
{
	asset.addCategory(categoryeditor.currentCategory);
}

String sourcepath = context.findValue("sourcepath");
if (sourcepath != null && sourcepath.endsWith("/")) 
{
	boolean createAsFolder = Boolean.parseBoolean(context.findValue("createasfolder"));
	if (createAsFolder)
	{
		sourcepath = sourcepath + asset.id ;
		// This is needed for attachments to work
		asset.setSourcePath(sourcepath);
	}
	else
	{
		sourcepath = sourcepath + asset.id + ".data";
	}
}

asset.setSourcePath(sourcepath);
asset.setFolder(true);
mediaarchive = context.getPageValue("mediaarchive");

asset.setProperty("owner", context.userName);
asset.setProperty("datatype", "original");



if (asset.sourcePath != null && asset.sourcePath.startsWith("users/"))
{
	Category pcat = mediaarchive.getCategory("users");
	if (pcat == null)
	{
		pcat = new Category("users", "Users");
		mediaarchive.categoryArchive.addChild(pcat);
	}
	Category cat = mediaarchive.getCategory("users_"+context.userName);
	if( cat == null)
	{
		cat = new Category();
		cat.setId("users_" + context.userName);
		cat.setName(context.user.shortDescription );
		pcat.addChild(cat);
		mediaarchive.categoryArchive.saveCategory(cat);
	}
	asset.addCategory(cat);
}

editor.saveAsset(asset);
editor.setCurrentAsset(asset);
context.putPageValue("asset", asset);
context.setRequestParameter("assetid", asset.id);
context.setRequestParameter("sourcepath", asset.sourcePath);
module.saveAssetProperties(context);

category = asset.defaultCategory;
webTree = context.getPageValue("catalogTree");
webTree.treeRenderer.setSelectedNode(category);
webTree.treeRenderer.expandNode(category);

context.putPageValue("category", category);
moduleManager.execute("CategoryModule.loadCrumbs", context );

String tosourcepath = context.findValue("redirecttosourcepath");

if (Boolean.parseBoolean(tosourcepath))
{
	String path = mediaarchive.getLinkToAssetDetails(asset.sourcePath);
	context.redirect(path);
}

