import org.openedit.entermedia.modules.*;
import org.openedit.entermedia.edit.*;
import com.openedit.page.*;
import com.openedit.*;
import org.openedit.entermedia.*;
import org.openedit.data.Searcher;
import com.openedit.hittracker.*;
import org.openedit.entermedia.creator.*;

public void init(String inPath)
{
	Searcher targetsearcher = mediaarchive.getAssetSearcher();
	SearchQuery q = targetsearcher.createSearchQuery();
	q.addMatches("category", "index");
	
	HitTracker hits = targetsearcher.search(q);

	String outputtype = "jpg";
	//We use the output extension so that we don't have look up the original input file to find the actual type
	MediaCreator creator = mediaarchive.getCreatorManager().getMediaCreatorByOutputFormat(outputtype);
	Page previewPage = pageManager.getPage(inPath);
	if(previewPage == null || !previewPage.exists())
	{
		return;
	}
	WebPageRequest newContext = context.copy(previewPage);
	newContext.setRequestParameter("forcewatermark", "true");
	newContext.setRequestParameter("prefwidth", previewPage.get("prefwidth"));
	newContext.setRequestParameter("prefheight", previewPage.get("prefheight"));
	
	for (Iterator iterator = hits.iterator(); iterator.hasNext();) {
	 	hit =  iterator.next();
		String sourcePath = hit.get("sourcepath");
		
		ConvertInstructions inStructions = creator.createInstructions(newContext, mediaarchive, outputtype, sourcePath);
		Page output = pageManager.getPage(inStructions.getOutputPath());
		
		if( !output.exists() || output.getContentItem().getLength() == 0 )
		{
			synchronized (this)
			{
				output = creator.createOutput(mediaarchive,inStructions);
			}
		}
	}
}

String path = "/" + mediaarchive.getCatalogId() + "/downloads/preview/medium/_site.xconf";
init(path);
